-- Generated by protobuf-simple. DO NOT EDIT!
module Antidote.ApbMapKey where

import Control.Applicative ((<$>))
import Prelude ()
import qualified Data.ProtoBufInt as PB
import qualified Antidote.CRDT_type

data ApbMapKey = ApbMapKey
  { key :: !PB.ByteString
  , type :: !Antidote.CRDT_type.CRDT_type
  } deriving (PB.Show, PB.Eq, PB.Ord)

instance PB.Default ApbMapKey where
  defaultVal = ApbMapKey
    { key = PB.defaultVal
    , type = PB.defaultVal
    }

instance PB.Mergeable ApbMapKey where
  merge a b = ApbMapKey
    { key = PB.merge (key a) (key b)
    , type = PB.merge (type a) (type b)
    }

instance PB.Required ApbMapKey where
  reqTags _ = PB.fromList [PB.WireTag 1 PB.LenDelim, PB.WireTag 2 PB.VarInt]

instance PB.WireMessage ApbMapKey where
  fieldToValue (PB.WireTag 1 PB.LenDelim) self = (\v -> self{key = PB.merge (key self) v}) <$> PB.getBytes
  fieldToValue (PB.WireTag 2 PB.VarInt) self = (\v -> self{type = PB.merge (type self) v}) <$> PB.getEnum
  fieldToValue tag self = PB.getUnknown tag self

  messageToFields self = do
    PB.putBytes (PB.WireTag 1 PB.LenDelim) (key self)
    PB.putEnum (PB.WireTag 2 PB.VarInt) (type self)


