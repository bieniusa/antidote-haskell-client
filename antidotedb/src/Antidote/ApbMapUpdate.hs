-- Generated by protobuf-simple. DO NOT EDIT!
module Antidote.ApbMapUpdate where

import Control.Applicative ((<$>))
import Prelude ()
import qualified Data.ProtoBufInt as PB
import qualified Antidote.ApbMapNestedUpdate
import qualified Antidote.ApbMapKey

data ApbMapUpdate = ApbMapUpdate
  { updates :: !(PB.Seq Antidote.ApbMapNestedUpdate.ApbMapNestedUpdate)
  , removedkeys :: !(PB.Seq Antidote.ApbMapKey.ApbMapKey)
  } deriving (PB.Show, PB.Eq, PB.Ord)

instance PB.Default ApbMapUpdate where
  defaultVal = ApbMapUpdate
    { updates = PB.defaultVal
    , removedkeys = PB.defaultVal
    }

instance PB.Mergeable ApbMapUpdate where
  merge a b = ApbMapUpdate
    { updates = PB.merge (updates a) (updates b)
    , removedkeys = PB.merge (removedkeys a) (removedkeys b)
    }

instance PB.Required ApbMapUpdate where
  reqTags _ = PB.fromList []

instance PB.WireMessage ApbMapUpdate where
  fieldToValue (PB.WireTag 1 PB.LenDelim) self = (\v -> self{updates = PB.append (updates self) v}) <$> PB.getMessage
  fieldToValue (PB.WireTag 2 PB.LenDelim) self = (\v -> self{removedkeys = PB.append (removedkeys self) v}) <$> PB.getMessage
  fieldToValue tag self = PB.getUnknown tag self

  messageToFields self = do
    PB.putMessageList (PB.WireTag 1 PB.LenDelim) (updates self)
    PB.putMessageList (PB.WireTag 2 PB.LenDelim) (removedkeys self)


